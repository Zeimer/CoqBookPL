Najnowszy rewolucyjny pomysł: użyć jsCoq do zrobienia interaktywnej książki, która wyglądałaby jakoś tak: https://x80.org/rhino-coq/v8.10/
Biedniejszy pomysł: zrobić zwijane/rozwijane dowody i paragrafy

Najnowszy plan refaktoringu:

R0 ej kej ej Wstęp

R1: Logika
	- Konstruktywny rachunek zdań
	- Konstruktywny rachunek kwantyfikatorów (nazwa "rachunek predykat" jest do dupsztala, bo są w nim nie tylko predykaty, ale też relacje etc.)
	- Paradoks golibrody, czyli związki logiki z rzeczywistością.
	- Klasyczny rachunek kwantyfikatorów. Zrobić tak żeby można było pisać "Classically $ coś tam".
	- Paradoks pijoka, czyli esencja klasyczności.
	- Paradoks pieniądza i kebaba, czyli o zasobach.
	- Na końcu dać podrozdział o kombinatorach taktyk (albo i nie).

R2: Typy induktywne
	- Enumeracje, czyli sumy nazwane.
		Kontent: podstawy obliczeń (to co obecnie jest przy opisie typu [bool]).
		Przykładowe typy: kierunki, kolory RGB, dni tygodnia, uprawnienia dostępu (R, W, RW, etc.), pusty, unit
		Ćwiczenia: logika boolowska. Dokładnie wszystko opisać i powiązać z logiką klasyczną
	- Parametry.
		Kontent: polimorfizm.
		Przykładowe typy: prod, sum.
		Ćwiczenia: typ option.
	- Konstruktory rekurencyjne.
		Kontent: rekursja.
		Przykładowe typy: nat
		Ćwiczenia: arytmetyka Peano.


Ltac
Spis taktyk
Reflekcja, metapoziom, quote i inne takie duperele


    - R5: Równość i obliczenia (obecnie fragment R2 i część notatki)
    - R6: Typy i funkcje — podstawy teorii typów, przemycić teorię
          kategorii (obecne X4)
    - R7: Relacje — obecne X5
    - R8: Typy induktywne — konstruktory rekurencyjne.
          Arytmetyka Peano — obecne X2)
    - R9: Listy
*)
