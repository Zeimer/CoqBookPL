Nowy rozdział o logice boolowskiej:
1. Tabelki prawdy.
2. Rozstrzygalność, w tym Reflect i BoolSpec.
2ipół. Inna rozstrzygalność, czyli np. taka trzymożliwościowa (<, =, >).
3. Reflekcja małoskalowa.
4. Napisać podrozdział poświęcony temu, czy definiować predykaty przez rekursję czy przez indukcję. Użyć jako przykładu takich predykatów jak elem, Exists, Forall, Exactly. Jak to się ma do rozstrzygalności.
5. Metoda encode-decode, początkowo jako narzędzie do rozwiązywania problemów, których normalni ludzie nie mają i nigdy mieć nie będą. Potem: izomorfizmy typów.

Długofalowe:
1. Użyć jsCoq do zrobienia interaktywnej książki, która wyglądałaby jakoś tak: https://x80.org/rhino-coq/v8.10/
2. Zrobić zwijane/rozwijane dowody i paragrafy.
3. Dodać rozdział o stylu, wcięciach, komentowaniu etc. Patrz tu: https://www.cs.princeton.edu/courses/archive/fall19/cos326/style.php#1

Nazwy:
1. Wprowadzić wcześniej określenie "motyw eliminacji". Posługiwać się częściej określeniem "eliminacja" zamiast "indukcja"/"rekursja".

Rekursja:
1. Rekursja prymitywna.
2. Rekursja wyższego rzędu, tzn. nie w pełni zaaplikowane wywołania rekurencyjne.
3. Rekursja przez iterację.
4. Rekursja koindukcjowa.

Indukcja:
1. W nowym ujęciu podrozdział o regułach indukcyjnych ma być ściśle powiązany z wprowadzeniem rekursji strukturalnej (tzn. nie-prymitywnej).
2. Argumenty indukcyjne pierwszego i wyższego rzędu.
3. Opisać sposoby indeksowania drzew: żeby uzyskać z typu typ jego indeksów wystarczy wymazać argumenty nierekurencyjne (albo wstawić za nie unit).
4. Opisać zippery (czyli różniczkowanie typów).
5. Ćwiczenia:
5.1. Ćwiczenia z przetwarzania danych, typu "znajdź wszystkie liczby nieparzyste większe od x, których suma cyfr to dupa konia".
5.2. Ćwiczenia z definiowania typów induktywnych (i relacji też). W tym takie:
5.3. Ćwiczenia z uogólniania hipotezy indukcyjnej (+ akumulatory i rekursja ogonowa).

Listy:
1. Opisać na przykładzie list różnice między teorią typów, a hardkorową matematyką konstruktywną opartą na relacjach separacji (apartness).
2. Dokończyć prace nad funkcjami znajdującymi wszystkie struktury danego rodzaju (permutacje, cykle, podciągi, palindromy etc.).
3. Dokończyć prace nad różnymi alternatywnymi definicjami permutacji.
5. Dokończyć prace nad resztą rzeczy z folderu List/.

Funkcje:
1. Dokończyć podrozdział o odwrotnościach i izomorfizmach.
2. Napisać coś o (pre/post)skracalności.

Inne:
3. Znaleźć prostszy przykład dla podrozdziału o ścisłej pozytywności (ale do której konkretnie części?).
9. Izomorfizmy dla typów induktywnych: każde drzewo jest drzewem o jakiejś wysokości. Uogólniając: każdy element typu induktywnego jest elementem odpowiadającego my typu indeksowanego o pewnym indeksie.
14. Opisać taktyki dla redukcji i obliczeń.
15. Opisać podstawy teorii typów.
17. Opisać zmienne egzystencjalne i odpowiadające im taktyki.
18. Opisać taktyki do radzenia sobie z typami zależnymi.
19. Opisać: silnia, współczynniki dwumianowe, sumy szeregów, charakteryzowanie wzorów rekurencyjnych.
22. Opisać exists!
26. Odkłamać kwestię polimorfizmu najlepiej przy okazji rozdziału o programowaniu generycznym.
26ipół. Kwestia parametryczności: lam X. lam nil. lam cons. cons X nil - egzotyczna lista
27. Twierdzenie: można zanurzyć liczby naturalne w liczby konaturalne, ale nie można tego zanurzenia odwrócić.

Sugestie i problemy z koła:
1. Opisać dokładniej definiowanie przez dowód.
2. Nie trzeba specjalizować hipotezy, żeby przepisać.
3. Być może coś więcej o równości (i jej alternatywnej definicji?).
4. Napisać bardziej wprost o deklarowaniu hipotez.
5. Ulepszyć ściągę z taktykami i komendami.
6. Ludzie po czasie zapominają składni.
7. Napisać coś więcej o składni i o rysowaniu termów.